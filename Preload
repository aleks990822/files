
extension UIColor {
    
    convenience init(hex: UInt32, alpha: CGFloat) {
        let red = CGFloat((hex & 0xFF0000) >> 16)/256.0
        let green = CGFloat((hex & 0xFF00) >> 8)/256.0
        let blue = CGFloat(hex & 0xFF)/256.0
        
        self.init(red: red, green: green, blue: blue, alpha: alpha)
    }
}


var activityIndicator:UIActivityIndicatorView = UIActivityIndicatorView()
    var containerView = UIView()
    var progressView = UIView()


 func preloadStart(){
     // tableView
     // collectionView
        view.isUserInteractionEnabled = false
        showProgressView(view)
        
    }
    
    func preloadEnd(){
        
        activityIndicator.stopAnimating()
        containerView.isHidden = true
        progressView.isHidden = true
        
     // tableView
     // collectionView
        view.isUserInteractionEnabled = true
        
    }
    
    open func showProgressView(_ view: UIView) {
        containerView.frame = view.frame
        containerView.center.x = view.center.x
        containerView.center.y = view.center.y - 46
        
      //containerView.backgroundColor = UIColor.blue
     // containerView.backgroundColor = UIColor(red: 200/255, green: 200/255, blue: 200/255, alpha: 0.7)
        containerView.backgroundColor = UIColor(hex: 0xffffff, alpha: 0.3)
        
        progressView.frame = CGRect(x: 0, y: 0, width: 80, height: 80)
        progressView.center = view.center
        progressView.backgroundColor = UIColor(hex: 0x444444, alpha: 0.7)
        progressView.clipsToBounds = true
        progressView.layer.cornerRadius = 10
        
        activityIndicator.frame = CGRect(x: 0, y: 0, width: 40, height: 40)
        activityIndicator.activityIndicatorViewStyle = .whiteLarge
        activityIndicator.center = CGPoint(x: progressView.bounds.width / 2, y: progressView.bounds.height / 2)
        
        progressView.addSubview(activityIndicator)
        containerView.addSubview(progressView)
        view.addSubview(containerView)
        
        activityIndicator.startAnimating()
    }
